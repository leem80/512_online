@model PROnline.Models.Users.Student

@{
    ViewBag.Title = "录入学生信息";
    Layout = "~/Views/Shared/Space/_Edit.cshtml";
}
@section head{
<style>
    .xyqk{height:80px;list-style:none;margin:0px;padding:0px;}
    .xyqk li{
        float:left;width:80px;margin:0px;padding:0px;margin-right:2px;
    }
</style>
<script type="text/javascript">
    function Week(str) {
        var time = document.getElementById("time");
        time.length = 0;
        if (str == "星期一" || str == "星期二" || str == "星期三" || str == "星期四" || str == "星期五") {
            time.options.add(new Option("19点-21点", "19"));
            time.options.add(new Option("21点-23点", "21"));
        }
        else if (str == "星期六" || str == "星期日") {
            time.options.add(new Option("09点-11点", "9"));
            time.options.add(new Option("14点-16点", "14"));
            time.options.add(new Option("16点-18点", "16"));
            time.options.add(new Option("19点-21点", "19"));
            time.options.add(new Option("21点-23点", "21"));
        }
    }
    </script>
}

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <input type="hidden" name="SchoolID" value="@ViewBag.SchoolID"/>
        <div class="editor-label">
            @Html.LabelFor(model => model.User.UserName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.User.UserName)
            @Html.ValidationMessageFor(model => model.User.UserName)
        </div>

         <div class="editor-label">
            @Html.LabelFor(model => model.User.RealName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.User.RealName)
            @Html.ValidationMessageFor(model => model.User.RealName)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Sex)
        </div>
        <div class="editor-field">
            @Html.DropDownList("Sex", new SelectList(new List<String> { "男", "女" }))
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Birthday)
        </div>
        <div class="editor-field">
            
            <select name="YYYY" onchange="YYYYDD(this.value)" id="year">
                <option value=""selected="selected">请选择 年</option>
            </select>
            <select name="MM" onchange="MMDD(this.value)" id="month">
                <option value="" selected="selected">请选择 月</option>
            </select>
            <select name="DD" id="day">
                <option value="" selected="selected">请选择 日</option>
            </select>
             @Html.ValidationMessage("Birthday")
        </div>

        <!--年、月、日级联选择-->
       <script type="text/javascript">
           var year = document.getElementById("year");
           var month = document.getElementById("month");
           var day = document.getElementById("day");

           function YYYYMMDDstart() {
               MonHead = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];

               //先给年下拉框赋内容
               var y = new Date().getFullYear();

               for (var i = (y - 60); i < (y - 15); i++) //以今年为准
                   year.options.add(new Option(" " + i + " 年", i));

               //赋月份的下拉框
               for (var i = 1; i < 13; i++)
                   month.options.add(new Option(" " + i + " 月", i));

               year.value = y;

               var n = MonHead[new Date().getMonth()];
               if (new Date().getMonth() == 1 && IsPinYear(YYYYvalue)) n++;
               writeDay(n); //赋日期下拉框

           }
           if (document.attachEvent)
               window.attachEvent("onload", YYYYMMDDstart);
           else
               window.addEventListener('load', YYYYMMDDstart, false);
           function YYYYDD(str) //年发生变化时日期发生变化(主要是判断闰平年)
           {
               var MMvalue = month.options[month.selectedIndex].value;
               if (MMvalue == "") { var e = day; optionsClear(e); return; }
               var n = MonHead[MMvalue - 1];
               if (MMvalue == 2 && IsPinYear(str)) n++;
               writeDay(n)
           }
           function MMDD(str)  //月发生变化时日期联动
           {
               var YYYYvalue = year.options[year.selectedIndex].value;
               if (YYYYvalue == "") { var e = day; optionsClear(e); return; }
               var n = MonHead[str - 1];
               if (str == 2 && IsPinYear(YYYYvalue)) n++;
               writeDay(n)
           }
           function writeDay(n)  //据条件写日期的下拉框
           {
               var e = day; optionsClear(e);
               for (var i = 1; i < (n + 1); i++)
                   e.options.add(new Option(" " + i + " 日", i));
           }
           function IsPinYear(year)//判断是否闰平年
           {
               return (0 == year % 4 && (year % 100 != 0 || year % 400 == 0));
           }
           function optionsClear(e) {
               e.options.length = 1;
           }

    </script>

        <div class="editor-label">
            @Html.LabelFor(model => model.People)
        </div>
        <div class="editor-field">
            @Html.DropDownList("People", new SelectList(new List<String> { "汉族", "壮族", "满族", "回族", "苗族", "维吾尔族", "土家族", "彝族", "蒙古族", "藏族", "布依族", "侗族", "瑶族", "朝鲜族", "白族", "哈尼族", "哈萨克族", "黎族", "傣族", "畲族", "傈僳族", "仡佬族", "东乡族", "拉祜族", "水族", "佤族", "纳西族", "羌族", "土族" }))
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Career)
        </div>
        <div class="editor-field">
            @Html.DropDownList("Career", new SelectList(new List<String> { "无", "班长", "中队长", "小组长" }))
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.HomeNum)
        </div>
        <div class="editor-field">
            <div class="editor-field">
            @Html.DropDownList("HomeNum", new SelectList(new List<int> { 1, 2, 3, 4, 5, 6, 8, 9, 10 }))
        </div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Hobby)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Hobby)
            @Html.ValidationMessageFor(model => model.Hobby)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Telephone)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Telephone)
            @Html.ValidationMessageFor(model => model.Telephone)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CanSurf)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CanSurf)
            @Html.ValidationMessageFor(model => model.CanSurf)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SurfDayOfWeek)
        </div>
        <div class="editor-field">
            <select name="SurfDayOfWeek" onchange="Week(this.value)" id="week">
                <option value="星期一" selected="selected">星期一</option>
                <option value="星期二">星期二</option>
                <option value="星期三">星期三</option>
                <option value="星期四">星期四</option>
                <option value="星期五">星期五</option>
                <option value="星期六">星期六</option>
                <option value="星期日">星期日</option>
            </select>        
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SurfTime)
        </div>
        <div class="editor-field">    
            <select name="SurfTime" id="time">
                <option value="19">19点-21点</option>
                <option value="21">21点-23点</option>
            </select>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Hurt)
        </div>
        <div class="editor-field">
            @Html.DropDownList("Hurt", new SelectList(new List<String> { "无", "轻", "重" }))
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Die)
        </div>
        <div class="editor-field">
            @Html.DropDownList("Die", new SelectList(new List<String> { "无", "有" }))
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Lose)
        </div>
        <div class="editor-field">
            <div class="editor-field">
            @Html.DropDownList("Lose", new SelectList(new List<String> { "无", "轻微", "中等", "重大" }))
        </div>
            @Html.ValidationMessageFor(model => model.Lose)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsAlone)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsAlone)
            @Html.ValidationMessageFor(model => model.IsAlone)
        </div>

        <div class="editor-label">
            @Html.Label("学业情况")
        </div>
        <ul class="xyqk">
        <li>
        <div class="editor-label">
            @Html.Label("数学")
        </div>
        <div class="editor-field">
         @Html.DropDownList("Math", new SelectList(new List<String> { "很好", "较好", "一般", "较差" }))
         </div>
         </li><li>
         <div class="editor-label">
            @Html.Label("语文")
        </div>
        <div class="editor-field">
         @Html.DropDownList("Chinese", new SelectList(new List<String> { "很好", "较好", "一般", "较差" }))
         </div>
         </li><li>
         <div class="editor-label">
            @Html.Label("英语")
        </div>
        <div class="editor-field">
         @Html.DropDownList("English", new SelectList(new List<String> { "很好", "较好", "一般", "较差" }))
         </div>
         </li><li>
         <div class="editor-label">
            @Html.Label("物理")
        </div>
        <div class="editor-field">
         @Html.DropDownList("Physics", new SelectList(new List<String> { "很好", "较好", "一般", "较差" }))
         </div>
         </li><li>
         <div class="editor-label">
            @Html.Label("化学")
        </div>
        <div class="editor-field">
         @Html.DropDownList("Chemistry", new SelectList(new List<String> { "很好", "较好", "一般", "较差" }))
         </div>
         </li><li>
         <div class="editor-label">
            @Html.Label("生物")
        </div>
        <div class="editor-field">
         @Html.DropDownList("Sw", new SelectList(new List<String> { "很好", "较好", "一般", "较差" }))
         </div>

         </li><li>
         <div class="editor-label">
            @Html.Label("地理")
        </div>
        <div class="editor-field">
         @Html.DropDownList("Dl", new SelectList(new List<String> { "很好", "较好", "一般", "较差" }))
         </div>
         </li><li>

         <div class="editor-label">
            @Html.Label("历史")
        </div>
        <div class="editor-field">
         @Html.DropDownList("Ls", new SelectList(new List<String> { "很好", "较好", "一般", "较差" }))
         </div>
         </li>
         </ul>

        <p class="btn">
            <input type="submit" value="创建" />| <!--Html.ActionLink("返回", "SchoolNavigation", new { SchoolID = ViewBag.SchoolID })-->
            <a href="@Request.UrlReferrer">返回</a>
        </p>
    </fieldset>
}
