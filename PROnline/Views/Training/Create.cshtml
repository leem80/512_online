 @model PROnline.Models.Trainings.Training

@{
    ViewBag.Title = "组织培训";
    Layout = "~/Views/Shared/Space/_Edit.cshtml";
}

@section head{
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/ckeditor/ckeditor.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/MicrosoftAjax.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/MicrosoftMvcAjax.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.min.js")" type="text/javascript"></script>

}

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>

        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field p70">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.Locale)
        </div>
        <div class="editor-field p70">
            @Html.EditorFor(model => model.Locale)
            @Html.ValidationMessageFor(model => model.Locale)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Arrangement)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Arrangement)
            @Html.ValidationMessageFor(model => model.Arrangement)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.StartDate)
        </div>
        <div class="editor-field select">
            @Html.EditorFor(model => model.StartDate)
            <script type="text/javascript">
                $("#StartDate").attr("readonly", "readonly")
            </script>
            @Html.ValidationMessageFor(model => model.StartDate)
            @Html.ValidationMessage("StartDateError")
            @Tools.DateBox("StartDate")
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.StartTime)
        </div>
        <div class="editor-field">
        @{
            List<SelectListItem> startItems = new List<SelectListItem>();
            startItems.Add(new SelectListItem { Text = "8点", Value = "08:00:00" });
            startItems.Add(new SelectListItem { Text = "9点", Value = "09:00:00" });
            startItems.Add(new SelectListItem { Text = "10点", Value = "10:00:00" });
            startItems.Add(new SelectListItem { Text = "11点", Value = "11:00:00" });
            startItems.Add(new SelectListItem { Text = "12点", Value = "12:00:00" });
            startItems.Add(new SelectListItem { Text = "13点", Value = "13:00:00" });
            startItems.Add(new SelectListItem { Text = "14点", Value = "14:00:00" });
            startItems.Add(new SelectListItem { Text = "15点", Value = "15:00:00" });
            startItems.Add(new SelectListItem { Text = "16点", Value = "16:00:00" });
            startItems.Add(new SelectListItem { Text = "17点", Value = "17:00:00" });
            startItems.Add(new SelectListItem { Text = "18点", Value = "18:00:00" });
            startItems.Add(new SelectListItem { Text = "19点", Value = "19:00:00" });
            startItems.Add(new SelectListItem { Text = "20点", Value = "20:00:00" });
            @Html.DropDownList("StartTime", startItems as IEnumerable<SelectListItem>)
          }
            @Html.ValidationMessageFor(model => model.StartTime)
            @Html.ValidationMessage("Error")
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.EndTime)
        </div>
        <div class="editor-field">
        @{
            List<SelectListItem> endItems = new List<SelectListItem>();
            endItems.Add(new SelectListItem { Text = "8点", Value = "08:00:00" });
            endItems.Add(new SelectListItem { Text = "9点", Value = "09:00:00" });
            endItems.Add(new SelectListItem { Text = "10点", Value = "10:00:00" });
            endItems.Add(new SelectListItem { Text = "11点", Value = "11:00:00" });
            endItems.Add(new SelectListItem { Text = "12点", Value = "12:00:00" });
            endItems.Add(new SelectListItem { Text = "13点", Value = "13:00:00" });
            endItems.Add(new SelectListItem { Text = "14点", Value = "14:00:00" });
            endItems.Add(new SelectListItem { Text = "15点", Value = "15:00:00" });
            endItems.Add(new SelectListItem { Text = "16点", Value = "16:00:00" });
            endItems.Add(new SelectListItem { Text = "17点", Value = "17:00:00" });
            endItems.Add(new SelectListItem { Text = "18点", Value = "18:00:00" });
            endItems.Add(new SelectListItem { Text = "19点", Value = "19:00:00" });
            endItems.Add(new SelectListItem { Text = "20点", Value = "20:00:00" });
            @Html.DropDownList("EndTime", endItems as IEnumerable<SelectListItem>)
          }
            @Html.ValidationMessageFor(model => model.StartTime)
        </div>
        
        <div>
            @{
            Html.RenderAction("Select", "Users", new { selectType = "checkbox", filter = "type=selTrainingMember", userType = new[] { "team_leader", "volunteer", "supervisor" } });
             }
        </div>
            
            @{
                if (ViewBag.isShow == true)
                {
                    <p class="btn">
                        <input type="submit" value="创建" />|@Html.ActionLink("返回", "Index")
                    </p>
                }
                else
                {
                    <input type="submit" value="创建" />
                }
            }
    </fieldset>
}


